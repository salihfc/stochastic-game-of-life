; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="Godot4-game-of-life"
run/main_scene="res://src/scene_manager.tscn"
config/features=PackedStringArray("4.0")

[autoload]

LOG="*res://src/singletons/log.tscn"
UTILS="*res://src/singletons/utils.gd"

[debug]

file_logging/log_path="res://logs/godot.log"
settings/gdscript/max_call_stack=4096
gdscript/warnings/unused_signal=false
gdscript/warnings/treat_warnings_as_errors=true

[display]

window/size/viewport_width=640
window/size/viewport_height=640
window/stretch/mode="viewport"

[editor]

movie_writer/mjpeg_quality=1.0
movie_writer/movie_file="/home/salihfc/godot-projects/godot4/prob-game-of-life/logs/sec/vid.png"
node_naming/name_num_separator=3
search_in_file_extensions=PackedStringArray("gd", "gdshader", "shader", "txt", "log")
convert_text_resources_to_binary_on_export=true

[editor_plugins]

enabled=PackedStringArray()

[gdnative]

singletons=[]
singletons_disabled=[]

[gdunit3]

settings/common/update_notification_enabled=false

[gui]

theme/use_hidpi=true

[importer_defaults]

texture={
"compress/bptc_ldr": 0,
"compress/hdr_mode": 0,
"compress/lossy_quality": 0.7,
"compress/mode": 0,
"compress/normal_map": 0,
"detect_3d": false,
"flags/anisotropic": false,
"flags/filter": false,
"flags/mipmaps": false,
"flags/repeat": 0,
"flags/srgb": 2,
"process/HDR_as_SRGB": false,
"process/fix_alpha_border": true,
"process/invert_color": false,
"process/normal_map_invert_y": false,
"process/premult_alpha": false,
"size_limit": 0,
"stream": false,
"svg/scale": 1.0
}
csv_translation={
"compress": false,
"delimiter": 0
}

[input]

zoom_in={
"deadzone": 0.5,
"events": [Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"button_mask":0,"position":Vector2(0, 0),"global_position":Vector2(0, 0),"factor":1.0,"button_index":4,"pressed":false,"double_click":false,"script":null)
]
}
zoom_out={
"deadzone": 0.5,
"events": [Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"button_mask":0,"position":Vector2(0, 0),"global_position":Vector2(0, 0),"factor":1.0,"button_index":5,"pressed":false,"double_click":false,"script":null)
]
}
move_right={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":68,"key_label":0,"unicode":100,"echo":false,"script":null)
]
}
move_left={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":65,"key_label":0,"unicode":97,"echo":false,"script":null)
]
}
move_up={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"key_label":0,"unicode":119,"echo":false,"script":null)
]
}
move_down={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":83,"key_label":0,"unicode":115,"echo":false,"script":null)
]
}

[logging]

file_logging/log_path="res://logs/godot.log"

[memory]

limits/multithreaded_server/rid_pool_prealloc=480
limits/message_queue/max_size_kb=16384
limits/command_queue/multithreading_queue_size_kb=1024

[physics]

common/enable_pause_aware_picking=true

[rendering]

2d/options/use_nvidia_rect_flicker_workaround=true
quality/intended_usage/framebuffer_allocation.mobile=2
2d/snapping/use_gpu_pixel_snap=true
quality/filters/use_debanding=true
environment/default_environment="res://default_env.tres"

[statistics]

force_include=PackedStringArray()
